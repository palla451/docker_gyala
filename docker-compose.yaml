services:
  proxy:
    container_name: proxy-app
    image: nginx:latest
    volumes:
      - ./logs/proxy/:/var/log/nginx/
      - ./nginx/proxy-app/:/etc/nginx/conf.d/
    depends_on:
      - nginx
    ports:
      - "80:80"
      - "8181:3000"
    networks:
      - external-network  # Rete condivisa con il mondo esterno
      - internal-network  # Rete per comunicare con i container interni

  nginx:
    container_name: nginx-app
    image: nginx:latest
    volumes:
      - ./logs/nginx/:/var/log/nginx/
      - ./nginx/nginx-app/conf.d/:/etc/nginx/conf.d/
      - ./nginx/nginx-app/fastcgi.conf/:/etc/nginx/fastcgi.conf
    depends_on:
      - backend
      - frontend
    ports:
      - "8080:80"
    networks:
      - internal-network  # Solo rete interna


  backend:
    container_name: backend-app
    build:
      context: ./www
      dockerfile: ../Dockerfile.backend
    volumes:
      - ./www/backend:/var/www/backend
    ports:
      - "9000"
    networks:
      - internal-network  # Solo rete interna

  frontend:
    image: nginx:latest
    container_name: frontend-app
    volumes:
      - ./logs/frontend/:/var/log/nginx/
      - ./nginx/frontend-app/conf.d/:/etc/nginx/conf.d/
      - ./www/frontend/:/var/www/frontend/
    ports:
      - "3000:80"
    networks:
      - internal-network  # Solo rete interna


networks:
  external-network:
    driver: bridge
  internal-network: # Solo per comunicazione tra container interni
    driver: bridge
    internal: true
